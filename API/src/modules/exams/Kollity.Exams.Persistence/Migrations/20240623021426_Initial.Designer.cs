// <auto-generated />
using System;
using Kollity.Exams.Persistence.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kollity.Exams.Persistence.Migrations
{
    [DbContext(typeof(ExamsDbContext))]
    [Migration("20240623021426_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("exams")
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kollity.Exams.Domain.ExamModels.Exam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("creation_date");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("end_date");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_updated_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("room_id");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_date");

                    b.HasKey("Id")
                        .HasName("pk_exam");

                    b.HasIndex("RoomId")
                        .HasDatabaseName("ix_exam_room_id");

                    b.ToTable("Exam", "exams");
                });

            modelBuilder.Entity("Kollity.Exams.Domain.ExamModels.ExamAnswer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("ExamId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("exam_id");

                    b.Property<Guid>("ExamQuestionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("exam_question_id");

                    b.Property<Guid?>("ExamQuestionOptionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("exam_question_option_id");

                    b.Property<DateTime>("RequestTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("request_time");

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("room_id");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("student_id");

                    b.Property<DateTime?>("SubmitTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("submit_time");

                    b.HasKey("Id")
                        .HasName("pk_exam_answer");

                    b.HasIndex("ExamId")
                        .HasDatabaseName("ix_exam_answer_exam_id");

                    b.HasIndex("ExamQuestionId")
                        .HasDatabaseName("ix_exam_answer_exam_question_id");

                    b.HasIndex("ExamQuestionOptionId")
                        .HasDatabaseName("ix_exam_answer_exam_question_option_id");

                    b.HasIndex("RoomId")
                        .HasDatabaseName("ix_exam_answer_room_id");

                    b.HasIndex("StudentId", "ExamQuestionId")
                        .IsUnique()
                        .HasDatabaseName("ix_exam_answer_student_id_exam_question_id")
                        .HasFilter("[student_id] IS NOT NULL");

                    b.ToTable("ExamAnswer", "exams");
                });

            modelBuilder.Entity("Kollity.Exams.Domain.ExamModels.ExamQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<byte>("Degree")
                        .HasColumnType("tinyint")
                        .HasColumnName("degree");

                    b.Property<Guid>("ExamId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("exam_id");

                    b.Property<int>("OpenForSeconds")
                        .HasColumnType("int")
                        .HasColumnName("open_for_seconds");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)")
                        .HasColumnName("question");

                    b.HasKey("Id")
                        .HasName("pk_exam_question");

                    b.HasIndex("ExamId")
                        .HasDatabaseName("ix_exam_question_exam_id");

                    b.ToTable("ExamQuestion", "exams");
                });

            modelBuilder.Entity("Kollity.Exams.Domain.ExamModels.ExamQuestionOption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("ExamQuestionId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("exam_question_id");

                    b.Property<bool>("IsRightOption")
                        .HasColumnType("bit")
                        .HasColumnName("is_right_option");

                    b.Property<string>("Option")
                        .IsRequired()
                        .HasMaxLength(1023)
                        .HasColumnType("nvarchar(1023)")
                        .HasColumnName("option");

                    b.HasKey("Id")
                        .HasName("pk_exam_question_option");

                    b.HasIndex("ExamQuestionId")
                        .HasDatabaseName("ix_exam_question_option_exam_question_id");

                    b.ToTable("ExamQuestionOption", "exams");
                });

            modelBuilder.Entity("Kollity.Exams.Domain.RoomModels.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("DoctorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("doctor_id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(227)
                        .HasColumnType("nvarchar(227)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_room");

                    b.HasIndex("DoctorId")
                        .HasDatabaseName("ix_room_doctor_id");

                    b.ToTable("Room", "exams");
                });

            modelBuilder.Entity("Kollity.Exams.Domain.RoomModels.RoomUser", b =>
                {
                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("room_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("RoomId", "UserId")
                        .HasName("pk_room_user");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_room_user_user_id");

                    b.ToTable("RoomUser", "exams");
                });

            modelBuilder.Entity("Kollity.Exams.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("code");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)")
                        .HasColumnName("full_name");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)")
                        .HasColumnName("user_name");

                    b.Property<int>("UserType")
                        .HasColumnType("int")
                        .HasColumnName("user_type");

                    b.HasKey("Id")
                        .HasName("pk_user");

                    b.ToTable("User", "exams");
                });

            modelBuilder.Entity("Kollity.Exams.Domain.ExamModels.Exam", b =>
                {
                    b.HasOne("Kollity.Exams.Domain.RoomModels.Room", "Room")
                        .WithMany("Exams")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_exam_rooms_room_id");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Kollity.Exams.Domain.ExamModels.ExamAnswer", b =>
                {
                    b.HasOne("Kollity.Exams.Domain.ExamModels.Exam", "Exam")
                        .WithMany("Answers")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_exam_answer_exams_exam_id");

                    b.HasOne("Kollity.Exams.Domain.ExamModels.ExamQuestion", "ExamQuestion")
                        .WithMany("ExamAnswers")
                        .HasForeignKey("ExamQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_exam_answer_exam_questions_exam_question_id");

                    b.HasOne("Kollity.Exams.Domain.ExamModels.ExamQuestionOption", "ExamQuestionOption")
                        .WithMany("ExamAnswers")
                        .HasForeignKey("ExamQuestionOptionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("fk_exam_answer_exam_question_options_exam_question_option_id");

                    b.HasOne("Kollity.Exams.Domain.RoomModels.Room", null)
                        .WithMany("ExamAnswers")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("fk_exam_answer_rooms_room_id");

                    b.HasOne("Kollity.Exams.Domain.User", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("fk_exam_answer_users_student_id");

                    b.Navigation("Exam");

                    b.Navigation("ExamQuestion");

                    b.Navigation("ExamQuestionOption");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Kollity.Exams.Domain.ExamModels.ExamQuestion", b =>
                {
                    b.HasOne("Kollity.Exams.Domain.ExamModels.Exam", "Exam")
                        .WithMany("ExamQuestions")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_exam_question_exam_exam_id");

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("Kollity.Exams.Domain.ExamModels.ExamQuestionOption", b =>
                {
                    b.HasOne("Kollity.Exams.Domain.ExamModels.ExamQuestion", "ExamQuestion")
                        .WithMany("ExamQuestionOptions")
                        .HasForeignKey("ExamQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_exam_question_option_exam_question_exam_question_id");

                    b.Navigation("ExamQuestion");
                });

            modelBuilder.Entity("Kollity.Exams.Domain.RoomModels.Room", b =>
                {
                    b.HasOne("Kollity.Exams.Domain.User", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_room_users_doctor_id");

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("Kollity.Exams.Domain.RoomModels.RoomUser", b =>
                {
                    b.HasOne("Kollity.Exams.Domain.RoomModels.Room", "Room")
                        .WithMany("RoomUsers")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_room_user_room_room_id");

                    b.HasOne("Kollity.Exams.Domain.User", "User")
                        .WithMany("RoomUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_room_user_users_user_id");

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Kollity.Exams.Domain.ExamModels.Exam", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("ExamQuestions");
                });

            modelBuilder.Entity("Kollity.Exams.Domain.ExamModels.ExamQuestion", b =>
                {
                    b.Navigation("ExamAnswers");

                    b.Navigation("ExamQuestionOptions");
                });

            modelBuilder.Entity("Kollity.Exams.Domain.ExamModels.ExamQuestionOption", b =>
                {
                    b.Navigation("ExamAnswers");
                });

            modelBuilder.Entity("Kollity.Exams.Domain.RoomModels.Room", b =>
                {
                    b.Navigation("ExamAnswers");

                    b.Navigation("Exams");

                    b.Navigation("RoomUsers");
                });

            modelBuilder.Entity("Kollity.Exams.Domain.User", b =>
                {
                    b.Navigation("RoomUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
